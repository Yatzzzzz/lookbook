'use client'; import { useEffect, useState } from 'react'; import { ThemeProvider as NextThemesProvider } from 'next-themes'; import { type ThemeProviderProps } from 'next-themes/dist/types'; export function ThemeProvider({ children, ...props }: ThemeProviderProps) { const [mounted, setMounted] = useState(false); // Prevent hydration mismatch useEffect(() => { setMounted(true); }, []); // Force light mode and prevent any theme switching useEffect(() => { // Add light and high contrast classes to HTML element for global styling document.documentElement.classList.add('light'); document.documentElement.classList.add('high-contrast'); // Remove any dark classes if they exist document.documentElement.classList.remove('dark'); // Set data attribute for any components that might check it document.documentElement.setAttribute('data-theme', 'light'); return () => { // Don't remove the light class on cleanup document.documentElement.classList.remove('high-contrast'); }; }, []); return ( <NextThemesProvider attribute="class" defaultTheme="light" enableSystem={false} forcedTheme="light" disableTransitionOnChange {...props} > {mounted && children} </NextThemesProvider> ); } 